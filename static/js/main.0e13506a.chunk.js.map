{"version":3,"sources":["store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","actionsToSend","character","respectfulAppeal","playerTurn","gameBoard","pieces","tiles","reducer","state","action","type","Error","dictionary","App","memo","useReducer","appState","dispatch","handleTileClick","row","column","e","preventDefault","handlePieceClick","_renderPieces","playerId","values","countPieces","length","divStyle","top","left","push","className","id","toString","style","onClick","href","background","countTiles","_renderTiles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e13506a.chunk.js","sourcesContent":["\r\n\r\nexport const initialState = { \r\n  actionsToSend: [],\r\n  character: 'sber',\r\n  respectfulAppeal: true,\r\n\r\n  //The initial setup\r\n  playerTurn: 1,\r\n  gameBoard : [\r\n    [0, 1, 0, 1, 0, 1, 0, 1],\r\n    [1, 0, 1, 0, 1, 0, 1, 0],\r\n    [0, 1, 0, 1, 0, 1, 0, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [2, 0, 2, 0, 2, 0, 2, 0],\r\n    [0, 2, 0, 2, 0, 2, 0, 2],\r\n    [2, 0, 2, 0, 2, 0, 2, 0]\r\n  ],\r\n  //arrays to store the instances\r\n  pieces : [],\r\n  tiles : []\r\n\r\n};\r\n\r\n\r\n\r\n\r\n/*\r\ntype Note = {\r\n  id: string;\r\n  title: string;\r\n  completed: boolean;\r\n};\r\n*/\r\n\r\ntype ActionToSend = {\r\n  id: string;\r\n  Action: { action: any };\r\n}\r\n\r\ntype State = {\r\n  //notes: Array<Note>;\r\n  actionsToSend: Array<ActionToSend>,\r\n\r\n  character: string,\r\n  respectfulAppeal: boolean,\r\n\r\n  playerTurn: number,\r\n  gameBoard: number[][],\r\n  pieces : string[],\r\n  tiles : string[]\r\n\r\n};\r\n\r\ntype Action =\r\n  | {\r\n    type: \"init\";\r\n  }\r\n  | {\r\n    type: \"go\";\r\n    coord: number;\r\n    }\r\n  | {\r\n    type: \"go_enemy\";\r\n    coord: number;\r\n  }\r\n  | {\r\n    type: \"tile_click\";\r\n    row: number;\r\n    column: number;\r\n  }\r\n  | {\r\n    type: \"piece_click\";\r\n    row: number;\r\n    column: number;\r\n  }\r\n  | {\r\n    type: \"test\";\r\n  };\r\n\r\n\r\nexport const reducer = (state: State, action: Action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case \"go\":\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case \"go_enemy\":\r\n      return {\r\n        ...state\r\n      };\r\n\r\n\r\n    case \"tile_click\":\r\n      //move piece when tile is clicked\r\n\r\n      /*\r\n    //make sure a piece is selected\r\n    if ($('.selected').length != 0) {\r\n      //find the tile object being clicked\r\n      var tileID = $(this).attr(\"id\").replace(/tile/, '');\r\n      var tile = tiles[tileID];\r\n      //find the piece being selected\r\n      var piece = pieces[$('.selected').attr(\"id\")];\r\n      //check if the tile is in range from the object\r\n      var inRange = tile.inRange(piece);\r\n      if (inRange != 'wrong') {\r\n        //if the move needed is jump, then move it but also check if another move can be made (double and triple jumps)\r\n        if (inRange == 'jump') {\r\n          if (piece.opponentJump(tile)) {\r\n            piece.move(tile);\r\n            if (piece.canJumpAny()) {\r\n              // Board.changePlayerTurn(); //change back to original since another turn can be made\r\n              piece.element.addClass('selected');\r\n              // exist continuous jump, you are not allowed to de-select this piece or select other pieces\r\n              Board.continuousjump = true;\r\n            } else {\r\n              Board.changePlayerTurn()\r\n            }\r\n          }\r\n          //if it's regular then move it if no jumping is available\r\n        } else if (inRange == 'regular' && !Board.jumpexist) {\r\n          if (!piece.canJumpAny()) {\r\n            piece.move(tile);\r\n            Board.changePlayerTurn()\r\n          } else {\r\n            alert(\"You must jump when possible!\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n      */\r\n\r\n      return {\r\n        ...state\r\n      };\r\n  \r\n\r\n    case \"piece_click\":\r\n      //select the piece on click if it is the player's turn\r\n\r\n    /*\r\n    var selected;\r\n    var isPlayersTurn = ($(this).parent().attr(\"class\").split(' ')[0] == \"player\" + Board.playerTurn + \"pieces\");\r\n    if (isPlayersTurn) {\r\n      if (!Board.continuousjump && pieces[$(this).attr(\"id\")].allowedtomove) {\r\n        if ($(this).hasClass('selected')) selected = true;\r\n        $('.piece').each(function (index) {\r\n          $('.piece').eq(index).removeClass('selected')\r\n        });\r\n        if (!selected) {\r\n          $(this).addClass('selected');\r\n        }\r\n      } else {\r\n        let exist = \"jump exist for other pieces, that piece is not allowed to move\"\r\n        let continuous = \"continuous jump exist, you have to jump the same piece\"\r\n        let message = !Board.continuousjump ? exist : continuous\r\n        console.log(message)\r\n      }\r\n    }\r\n\r\n    */\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case \"test\":\r\n      return {\r\n        ...state,\r\n        playerTurn: state.playerTurn===1?2:1\r\n      };\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport React, {\n  FC,\n  memo,\n  useReducer,\n  //useState,\n  //useRef,\n  //useEffect,\n  //useLayoutEffect,\n  //RefObject,\n} from 'react';\n\n/*\nimport {\n  createSmartappDebugger,\n  createAssistant,\n  createRecordPlayer,\n  AssistantAppState,\n  AssistantSmartAppData,\n  AssistantCharacterType\n} from \"@sberdevices/assistant-client\";\n*/\n\nimport { initialState, reducer } from \"./store\";\nimport { background } from '@sberdevices/plasma-tokens';\nimport { Row } from '@sberdevices/ui';\n\n\nconst dictionary = [\"0vmin\", \"10vmin\", \"20vmin\", \"30vmin\", \"40vmin\", \"50vmin\", \"60vmin\", \"70vmin\", \"80vmin\", \"90vmin\"];\n\n\nexport const App: FC = memo(() => {\n  const [appState, dispatch] = useReducer(reducer, initialState);\n\n\n  function changePlayerTurn() {\n    /*\n    if (this.playerTurn == 1) {\n      this.playerTurn = 2;\n      $('.turn').css(\"background\", \"linear-gradient(to right, transparent 50%, #BEEE62 50%)\");\n    } else {\n      this.playerTurn = 1;\n      $('.turn').css(\"background\", \"linear-gradient(to right, #BEEE62 50%, transparent 50%)\");\n    }\n    this.check_if_jump_exist()\n    return;\n    */\n  }\n\n  function handleTileClick(row: any, column: any, e:any) {\n    e.preventDefault();\n    dispatch({type: 'tile_click', row: row, column: column});\n  }\n  \n\nfunction _renderTiles()\n{\n  let values = [];\n\n  let countTiles=0;\n\n  for (let row=0; row<appState.gameBoard.length; row++) { //row is the index\n    for (let column=0; column<appState.gameBoard[row].length; column++) { //column is the index\n      //whole set of if statements control where the tiles and pieces should be placed on the board\n      if (row % 2 == 1) {\n        if (column % 2 == 0) {\n\n          const divStyle = {\n            top: dictionary[row],\n            left: dictionary[column]\n          };          \n      \n          values.push(<div key={countTiles.toString()} className=\"tile\" id={\"tile\"+countTiles.toString()} style={divStyle} onClick={(e)=>handleTileClick(row, column, e)}></div>);\n          countTiles++;\n\n        }\n      } else {\n        if (column % 2 == 1) {\n          //countTiles = this.tileRender(row, column, countTiles)\n          const divStyle = {\n            top: dictionary[row],\n            left: dictionary[column]\n          };          \n      \n          values.push(<div key={countTiles.toString()} className=\"tile\" id={\"tile\"+countTiles.toString()} style={divStyle} onClick={(e)=>handleTileClick(row, column, e)}></div>);\n          countTiles++;\n\n        }\n      }\n      /*\n      if (this.board[row][column] == 1) {\n        countPieces = this.playerPiecesRender(1, row, column, countPieces)\n      } else if (this.board[row][column] == 2) {\n        countPieces = this.playerPiecesRender(2, row, column, countPieces)\n      }\n      */\n    }\n  }\n\n  return  values;\n}\n\n\nfunction handlePieceClick(row: any, column: any, e:any) {\n  e.preventDefault();\n  dispatch({type: 'piece_click', row: row, column: column});\n}\n\n\nfunction _renderPieces(playerId: number)\n{\n  let values = [];\n\n  let countPieces=0;\n\n  for (let row=0; row<appState.gameBoard.length; row++) { //row is the index\n    for (let column=0; column<appState.gameBoard[row].length; column++) { //column is the index\n      if (appState.gameBoard[row][column] === playerId) {\n\n        const divStyle = {\n          top: dictionary[row],\n          left: dictionary[column]\n        };          \n    \n        values.push(<div key={countPieces.toString()} className=\"piece\" id={\"piece\"+countPieces.toString()} style={divStyle} onClick={(e)=>handlePieceClick(1,1,e)}></div>);\n        countPieces++;\n      }\n    }\n  }\n\n  return  values;\n\n}\n\nfunction handleClearGameClick(e: any) {\n  e.preventDefault();\n  dispatch({type: 'test'});\n}\n\n\n  return (\n    <div className=\"App\">\n    <div className=\"column\">\n    <div className=\"info\">\n      <h1>Checkers</h1>\n      <hr/>\n      <p>Made by codethejason for <a href=\"http://fossasia.org\">FOSSASIA</a> 2015.</p>\n    </div>\n    <div className=\"stats\">\n      <h2>Game Statistics</h2>\n      <div className=\"wrapper\">\n      <div id=\"player1\">\n        <h3>Player 1 (Top)</h3>\n      </div>\n      <div id=\"player2\">\n        <h3>Player 2 (Bottom)</h3>\n      </div>\n      </div>\n      <div className=\"clearfix\"></div>\n      <div className=\"turn\" style={appState.playerTurn===1?{background: \"linear-gradient(to right, #BEEE62 50%, transparent 50%)\"}:{background: \"linear-gradient(to right, transparent 50%, #BEEE62 50%)\"}}></div>\n      <span id=\"winner\"></span>\n      <button id=\"cleargame\" onClick={handleClearGameClick}>Reset Game</button>\n    </div>\n  </div>\n\n    <div className=\"column\">\n    <div id=\"board\">\n      <div className=\"tiles\">\n      {_renderTiles()}\n      </div>\n      <div className=\"pieces\">\n        <div className=\"player1pieces\">\n        {_renderPieces(1)}\n        </div>\n        <div className=\"player2pieces\">\n        {_renderPieces(2)}\n        </div>\n      </div>\n    </div>\n    </div>\n    </div>\n  );\n\n\n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    */\n});","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}